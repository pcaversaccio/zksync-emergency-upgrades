#!/usr/bin/env bash

########################
# Don't trust, verify! #
########################

# @license GNU Affero General Public License v3.0 only
# @author pcaversaccio

# Enable strict error handling:
# -E: Inherit `ERR` traps in functions and subshells.
# -e: Exit immediately if a command exits with a non-zero status.
# -u: Treat unset variables as an error and exit.
# -o pipefail: Return the exit status of the first failed command in a pipeline.
set -Eeuo pipefail

# Enable debug mode if the environment variable `DEBUG` is set to `true`.
if [[ "${DEBUG:-false}" == "true" ]]; then
	# Print each command before executing it.
	set -x
fi

# Define the parameters for the `UpgradeProposal` struct.
readonly CALLS="[(0x32400084c286cf3e17e7b677ea9583e60a000324,0x0314dc6448d9338c15b0a000000000,0xeb6724190000000000000000000000005a7d6b2f92c77fad6ccabd7ee0624e64907eaf3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000098968000000000000000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000043da37f21c4c83b97b546724c75600c2d0c9e1600000000000000000000000000000000000000000000000000000000000000442f2ff15dc8d1ad9d415224b751d781cc8214ccfe7c47716e13229475443f04f1ebddadc6000000000000000000000000f41eca3047b37dc7d88849de4a4dc07937ad6bc4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),\
				 (0x32400084c286cf3e17e7b677ea9583e60a000324,0x0314dc6448d9338c15b0a000000000,0xeb6724190000000000000000000000005a7d6b2f92c77fad6ccabd7ee0624e64907eaf3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000098968000000000000000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000043da37f21c4c83b97b546724c75600c2d0c9e1600000000000000000000000000000000000000000000000000000000000000442f2ff15d3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848000000000000000000000000f9de84382e826d74851b12736633c67f06e9a4ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),\
				 (0x32400084c286cf3e17e7b677ea9583e60a000324,0x0314dc6448d9338c15b0a000000000,0xeb672419000000000000000000000000f9de84382e826d74851b12736633c67f06e9a4ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000098968000000000000000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000120000000000000000000000000043da37f21c4c83b97b546724c75600c2d0c9e160000000000000000000000000000000000000000000000000000000000000004da1dc39e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),\
				 (0x32400084c286cf3e17e7b677ea9583e60a000324,0x0314dc6448d9338c15b0a000000000,0xeb6724190000000000000000000000005a7d6b2f92c77fad6ccabd7ee0624e64907eaf3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000098968000000000000000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000043da37f21c4c83b97b546724c75600c2d0c9e160000000000000000000000000000000000000000000000000000000000000044d547741f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848000000000000000000000000f9de84382e826d74851b12736633c67f06e9a4ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),\
				 (0x32400084c286cf3e17e7b677ea9583e60a000324,0x0314dc6448d9338c15b0a000000000,0xeb6724190000000000000000000000005a7d6b2f92c77fad6ccabd7ee0624e64907eaf3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000098968000000000000000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000043da37f21c4c83b97b546724c75600c2d0c9e160000000000000000000000000000000000000000000000000000000000000044d547741fc8d1ad9d415224b751d781cc8214ccfe7c47716e13229475443f04f1ebddadc6000000000000000000000000f41eca3047b37dc7d88849de4a4dc07937ad6bc4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)]"

# Define the executor contract.
readonly EXECUTOR="0xECE8e30bFc92c2A8e11e6cb2e17B70868572E3f6"

# Salt value as a hex string.
readonly SALT="0x0000000000000000000000000000000000000000000000000000000000000000"

# Encode the `UpgradeProposal` struct.
encoded_proposal=$(cast abi-encode "UpgradeProposal(((address,uint256,bytes)[],address,bytes32))" "($CALLS,$EXECUTOR,$SALT)")

# Compute the `keccak256` hash of the encoded proposal.
proposal_id=$(cast keccak "$encoded_proposal")

# Save the proposal ID to a file.
echo "$proposal_id" >proposal_id.txt

# Output the result.
echo "Encoded \`UpgradeProposal\` struct: $encoded_proposal"
echo "Proposal ID: $proposal_id"
